{"version":3,"sources":["actions/index.js","components/Presentational/Loader.js","components/Presentational/RenderOneGif.js","components/Presentational/RenderGifs.js","components/Container/TrendingContainer.js","components/Presentational/RenderSearch.js","components/Container/SearchContainer.js","components/Presentational/Header.js","components/Container/SearchPage.js","components/App.js","reducers/index.js","reducers/TrendingReducer.js","reducers/SearchReducer.js","serviceWorker.js","index.js"],"names":["API_KEY","concat","process","API_URL","BounceAnimation","keyframes","_templateObject","DotWrapper","styled","div","_templateObject2","Dot","_templateObject3","props","delay","Loader","react_default","a","createElement","generateColor","Math","floor","random","RenderOneGif","state","color","_this$props","this","gif","handleImageChange","SingeGifWrapper","gifWidth","images","fixed_height","width","gifHeight","height","bgColor","src","url","onLoad","onError","alt","title","Component","RenderOneGif_templateObject","RenderGifs","_ref","data","GifsGrid","map","Presentational_RenderOneGif","key","id","RenderGifs_templateObject","TrendingContainer","loading","componentDidMount","window","addEventListener","_throttle","_this","handleScrolling","loadGifs","setState","imagesLoaded","galleryElement","hmm","fetchTrending","innerHeight","pageYOffset","document","documentElement","scrollHeight","removeEventListener","Presentational_Loader","parentNode","imgElements","Object","toConsumableArray","querySelectorAll","i","length","complete","_this2","ref","element","trending","Presentational_RenderGifs","renderSpinner","connect","firstRender","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","getState","offset","wrap","_context2","prev","next","fetch","then","response","json","type","payload","reset","stop","_x2","_x3","apply","arguments","SearchBar","input","RenderSearch_templateObject","SearchForm","form","RenderSearch_templateObject2","RenderSearch","onSubmit","placeholder","value","term","onChange","handleChange","SearchContainer","event","target","fetchResults","handleSubmit","preventDefault","history","location","push","Presentational_RenderSearch","withRouter","_callee","_context","_x","HeaderWrapper","Header_templateObject","HeaderItem","h2","Header_templateObject2","Header","Link","to","Container_SearchContainer","SearchPage","results","React","searchResults","App","Fragment","BrowserRouter","Presentational_Header","Switch","Route","exact","path","component","combineReducers","undefined","action","newObj","Boolean","hostname","match","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f953f77c.chunk.js","sourcesContent":["const API_KEY = `api_key=${process.env.REACT_APP_API_KEY}`;\r\nconst API_URL = \"https://api.giphy.com/v1/gifs/\";\r\nconst fetchResults = term => async dispatch => {\r\n  fetch(`${API_URL}search?q=${term}&limit=50&${API_KEY}`)\r\n    .then(response => response.json())\r\n    .then(data =>\r\n      dispatch({\r\n        type: \"FETCH_RESULTS\",\r\n        payload: data\r\n      })\r\n    );\r\n};\r\nconst fetchTrending = firstRender => async (dispatch, getState) => {\r\n  const offset = firstRender ? 0 : getState().trending.data.length + 1;\r\n  fetch(`${API_URL}trending?offset=${offset}&${API_KEY}`)\r\n    .then(response => response.json())\r\n    .then(data =>\r\n      dispatch({\r\n        type: \"FETCH_TRENDING\",\r\n        payload: data,\r\n        reset: firstRender\r\n      })\r\n    );\r\n};\r\nexport { fetchTrending, fetchResults };\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst BounceAnimation = keyframes`\r\n  0% { margin-bottom: 0; }\r\n  50% { margin-bottom: 15px }\r\n  100% { margin-bottom: 0 }\r\n`;\r\nconst DotWrapper = styled.div`\r\n  margin: 100px 0 50px 0;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  height: 60px;\r\n`;\r\nconst Dot = styled.div`\r\n  background-color: white;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 0 5px;\r\n\r\n  animation: ${BounceAnimation} 0.5s linear infinite;\r\n  animation-delay: ${props => props.delay};\r\n`;\r\nconst Loader = () => {\r\n  return (\r\n    <DotWrapper>\r\n      <Dot delay=\"0s\" />\r\n      <Dot delay=\".1s\" />\r\n      <Dot delay=\".2s\" />\r\n    </DotWrapper>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nconst generateColor = () => {\r\n  const colors = [\"#2ecc71\", \"#fef160\", \"#f03434\", \"#6bb9f0\", \"#a537fd\"];\r\n  return colors[Math.floor(Math.random() * 5)];\r\n};\r\n\r\nclass RenderOneGif extends Component {\r\n  state = { color: generateColor() };\r\n  render() {\r\n    const { gif, handleImageChange } = this.props;\r\n    return (\r\n      <SingeGifWrapper\r\n        gifWidth={gif.images.fixed_height.width}\r\n        gifHeight={gif.images.fixed_height.height}\r\n        bgColor={this.state.color}\r\n      >\r\n        <img\r\n          src={gif.images.fixed_height.url}\r\n          onLoad={handleImageChange}\r\n          onError={handleImageChange}\r\n          alt={gif.title}\r\n        />\r\n      </SingeGifWrapper>\r\n    );\r\n  }\r\n}\r\nconst SingeGifWrapper = styled.div`\r\n  margin: 10px;\r\n  width: ${props => props.gifWidth}px;\r\n  height: ${props => props.gifHeight}px;\r\n  background-color: ${props => props.bgColor};\r\n`;\r\n\r\nexport default RenderOneGif;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RenderOneGif from \"./RenderOneGif\";\r\n\r\nconst RenderGifs = ({ data, handleImageChange }) => {\r\n  return (\r\n    <GifsGrid>\r\n      {data.map(gif => (\r\n        <RenderOneGif\r\n          gif={gif}\r\n          handleImageChange={handleImageChange}\r\n          key={gif.id}\r\n        />\r\n      ))}\r\n    </GifsGrid>\r\n  );\r\n};\r\nexport default RenderGifs;\r\n\r\nconst GifsGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 30px auto;\r\n  width: 80%;\r\n  @media (max-width: 700px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTrending } from \"../../actions\";\r\nimport Loader from \"../Presentational/Loader\";\r\nimport _throttle from \"lodash/throttle\";\r\nimport RenderGifs from \"../Presentational/RenderGifs\";\r\nclass TrendingContainer extends Component {\r\n  state = { loading: true };\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"scroll\", _throttle(this.handleScrolling, 400));\r\n    this.loadGifs(true);\r\n  };\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", _throttle(this.handleScrolling, 400));\r\n  }\r\n  handleImageChange = () => {\r\n    this.setState({\r\n      loading: !this.imagesLoaded(this.galleryElement)\r\n    });\r\n  };\r\n\r\n  renderSpinner() {\r\n    if (!this.state.loading) {\r\n      return null;\r\n    }\r\n    return <Loader />;\r\n  }\r\n  imagesLoaded(parentNode) {\r\n    const imgElements = [...parentNode.querySelectorAll(\"img\")];\r\n    for (let i = 0; i < imgElements.length; i += 1) {\r\n      const img = imgElements[i];\r\n      if (!img.complete) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  loadGifs = hmm => {\r\n    this.props.fetchTrending(hmm);\r\n  };\r\n\r\n  handleScrolling = () => {\r\n    if (\r\n      window.innerHeight + window.pageYOffset >=\r\n        document.documentElement.scrollHeight - 300 &&\r\n      !this.state.loading\r\n    ) {\r\n      this.loadGifs(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={element => {\r\n          this.galleryElement = element;\r\n        }}\r\n      >\r\n        {this.props.trending.data && (\r\n          <RenderGifs\r\n            data={this.props.trending.data}\r\n            handleImageChange={this.handleImageChange}\r\n          />\r\n        )}\r\n        {this.renderSpinner()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    trending: state.trending\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchTrending }\r\n)(TrendingContainer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst RenderSearch = props => {\r\n  return (\r\n    <SearchForm onSubmit={props.onSubmit}>\r\n      <SearchBar\r\n        placeholder=\"search\"\r\n        type=\"text\"\r\n        value={props.term}\r\n        onChange={props.handleChange}\r\n      />\r\n    </SearchForm>\r\n  );\r\n};\r\n\r\nconst SearchBar = styled.input`\r\n  padding: 5px;\r\n  width: 140px;\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  border-bottom: 2px solid black;\r\n  transition: 0.5s all;\r\n  :focus {\r\n    width: 180px;\r\n  }\r\n  ::placeholder {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst SearchForm = styled.form``;\r\n\r\nexport default RenderSearch;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchResults } from \"../../actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport RenderSearch from \"../Presentational/RenderSearch\";\r\n\r\nclass SearchContainer extends Component {\r\n  state = { value: \"\" };\r\n  handleChange = event => {\r\n    this.setState({ value: event.target.value }, () =>\r\n      this.props.fetchResults(this.state.value)\r\n    );\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.props.history.location !== \"/search\" && this.state.value) {\r\n      this.props.history.push(\"/search\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <RenderSearch\r\n        onSubmit={this.handleSubmit}\r\n        handleChange={this.handleChange}\r\n        term={this.state.value}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    { fetchResults }\r\n  )(SearchContainer)\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchContainer from \"../Container/SearchContainer\";\r\nconst Header = props => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <Link to=\"/\">\r\n        <HeaderItem>Trending GIFS</HeaderItem>\r\n      </Link>\r\n      <HeaderItem>\r\n        <SearchContainer />\r\n      </HeaderItem>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 55px;\r\n  background-color: #f7f7f7;\r\n`;\r\n\r\nconst HeaderItem = styled.h2`\r\n  font-size: 18px;\r\n  margin: 15px;\r\n  color: black;\r\n`;\r\nexport default Header;\r\n","import React from \"react\";\r\nimport RenderGifs from \"../Presentational/RenderGifs\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SearchPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.results.data ? (\r\n          <RenderGifs data={this.props.results.data} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    results: state.searchResults\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(SearchPage);\r\n","import React from \"react\";\nimport TrendingContainer from \"./Container/TrendingContainer\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Presentational/Header\";\nimport SearchPage from \"./Container/SearchPage\";\nimport \"../styles/App.css\";\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={TrendingContainer} />\n            <Route path=\"/search\" component={SearchPage} />\n            <Route component={TrendingContainer} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport SearchReducer from \"./SearchReducer\";\r\nimport TrendingReducer from \"./TrendingReducer\";\r\n\r\nexport default combineReducers({\r\n  trending: TrendingReducer,\r\n  searchResults: SearchReducer\r\n});\r\n","export default (state = [], action) => {\r\n  if (action.type === \"FETCH_TRENDING\") {\r\n    const newObj = action.payload;\r\n    if (state.length !== 0) {\r\n      if (!action.reset) {\r\n        newObj.data = [...state.data, ...action.payload.data];\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n  return state;\r\n};\r\n","export default (state = {}, action) => {\r\n  if (action.type === \"FETCH_RESULTS\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst store = createStore(reducers, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}